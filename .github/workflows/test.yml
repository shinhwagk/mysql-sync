name: MySQL Service Example

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql8036_1:
        image: shinhwagk/mysql:8.0.36
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_MYSQLD_ARGS: "--server-id=1000 --log-bin=mysql-bin --binlog-format=ROW --gtid-mode=on --enforce-gtid-consistency=on --binlog-rows_query-log-events=on"
        ports:
          - 33061:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      mysql8036_2:
        image: shinhwagk/mysql:8.0.36
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_MYSQLD_ARGS: "--server-id=1001 --log-bin=mysql-bin --gtid-mode=on --enforce-gtid-consistency=on"
        ports:
          - 33062:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    #   percona803628:
    #     image: percona:8.0.36-28
    #     env:
    #       MYSQL_ROOT_PASSWORD: root_password
    #       MYSQL_DATABASE: test_db
    #     ports:
    #       - 33062:3306
    #     options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    #   percona803527:
    #     image: percona:8.0.35-27
    #     env:
    #       MYSQL_ROOT_PASSWORD: root_password
    #       MYSQL_DATABASE: test_db
    #     ports:
    #       - 33063:3306
    #     options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
        
      - run: mysql -h127.0.0.1 -P33061 -uroot -proot_password -e 'SELECT version()'

      - name: Testing mysqlbinlog-statistics.
        run: |
          set -e

          mysql -h127.0.0.1 -P33061 -uroot -proot_password <test_data.sql

          function cmd1(){
            local MYSQLBINLOG_SERVER_ID=$((RANDOM + 1000000000))
            # mysqlbinlog --host=127.0.0.1 --port=33061 --user=root --password=root_password --read-from-remote-server --to-last-log --verbose --idempotent mysql-bin.000001
            mysqlbinlog --host=127.0.0.1 --port=33061 --user=root --password=root_password --read-from-remote-source=BINLOG-DUMP-GTIDS --compression-algorithms=zstd --zstd-compression-level=3 --verify-binlog-checksum --to-last-log --connection-server-id=${MYSQLBINLOG_SERVER_ID} --verbose --verbose --idempotent --force-read --print-table-metadata mysql-bin.000001
          }
          function cmd2(){
            cargo run 2>binlog_stats.log
          }
          function cmd3(){
            mysql -h127.0.0.1 -P33062 -uroot -proot_password -v >cmd3.out.log 2>cmd3.err.log
          }
          
          cmd1 | cmd2 | cmd3

          cat cmd3.err.log
          cat cmd3.out.log | wc -l

          cat binlog_stats.log
      
      - name: Tetsting gh-ost
        run: |
          set -e
          
          curl -OLs https://github.com/github/gh-ost/releases/download/v1.1.6/gh-ost-binary-linux-amd64-20231207144046.tar.gz
          tar zxvf gh-ost-binary-linux-amd64-20231207144046.tar.gz 

          ./gh-ost --version

          ./gh-ost \
            --max-load=Threads_running=100 \
            --critical-load=Threads_running=1000 \
            --chunk-size=3000 \
            --user="root" \
            --password="root_password" \
            --host='127.0.0.1' \
            --port=33061 \
            --database="test" \
            --table="tab1" \
            --verbose \
            --alter="add column c varchar(100)" \
            --assume-rbr \
            --initially-drop-old-table \
            --cut-over=default \
            --cut-over-lock-timeout-seconds=10 \
            --initially-drop-ghost-table \
            --execute

      - name: Testing data validation after using mysqlbinlog-statistics.
        run: |
          set -e

          pip install mysql-compare
          curl -OLs https://raw.githubusercontent.com/shinhwagk/mysql-compare-tables/main/scripts/dbcompare.py

          mkdir mysql-compare
          cd mysql-compare
          python ../dbcompare.py

          ls -l ./

          find ./ -type f -name '*.err.log' | while read file; do
            cat $file
          done

          find ./ -type f -name '*.diff.log' | while read file; do
            cat $file
          done
        env:
          ARGS_SOURCE_DSN: root/root_password@127.0.0.1:33061
          ARGS_TARGET_DSN: root/root_password@127.0.0.1:33062
          ARGS_DATABASES: test

      - name: Testing Gtid after using mysqlbinlog-statistics.
        run: |
          set -e

          mysql -h127.0.0.1 -P33061 -uroot -proot_password -e "select @@hostname, @@port, @@server_uuid, @@server_id\G show master status\G"

          mysql -h127.0.0.1 -P33062 -uroot -proot_password -e "select @@hostname, @@port, @@server_uuid, @@server_id\G show master status\G"

      # - run: |
      #     time mysqlbinlog -h127.0.0.1 -P33061 -uroot -proot_password --read-from-remote-server --to-last-log -v mysql-bin.000001 | bash ./binlogentry_statistics.sh >/dev/null

      #     mysqlbinlog -h127.0.0.1 -P33061 -uroot -proot_password --read-from-remote-server --to-last-log -v mysql-bin.000001 | bash ./binlogentry_statistics.sh | grep -i 'create table '

      #     [[ $? == 0 ]] && exit 0
      #     mysqlbinlog -h127.0.0.1 -P33061 -uroot -proot_password --read-from-remote-server --to-last-log -v mysql-bin.000001 | bash -x ./binlogentry_statistics.sh

